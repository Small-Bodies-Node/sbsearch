# GitHub Actions workflow for building the s2geometry library

on:
  workflow_call:

env:
  PYTHON_VERSION: "3.11"

jobs:
  s2geometry:
    name: Build s2geometry library for CATCH testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout build script
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/scripts/build_s2.sh
          sparse-checkout-cone-mode: false
      - name: Set up Python
        if: steps.cache.outputs.cache-hit != 'true'
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Check for cached files
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            /usr/local/include/s2
            /usr/local/lib/libs2.so*
            ${{ env.Python_ROOT_DIR }}/lib/python${{ env.PYTHON_VERSION }}/site-packages/_pywraps2.so
            ${{ env.Python_ROOT_DIR }}/lib/python${{ env.PYTHON_VERSION }}/site-packages/pywraps2.py
          key: s2geometry-py${{ steps.setup-python.outputs.python-version }}
      - name: check vars
        run: |
          echo '${{ steps.setup-python.outputs.python-version }}'
          echo '${{ steps.setup-python.outputs.python-path }}'
          echo ${pythonLocation}
          echo ${Python_ROOT_DIR}
      # - name: Install dependencies
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: |
      #     sudo apt update
      #     sudo apt install cmake libgflags-dev libgtest-dev libssl-dev
      # - name: Build and install
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: |
      #     bash .github/scripts/build_s2.sh
      # - name: Cache data
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   uses: actions/cache/save@v4
      #   with:
      #     key: s2geometry
      #     path: |
      #       .venv/include/s2
      #       .venv/lib/libs2.so*
