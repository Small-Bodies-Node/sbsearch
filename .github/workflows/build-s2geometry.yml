# GitHub Actions workflow for building the s2geometry library

on:
  workflow_call:

env:
  PYTHON_VERSION: "3.11"
  S2PREFIX: "/usr/local"
  ABSEIL_TAG: "20220623.1"
  S2_TAG: "v0.10.0"

jobs:
  s2geometry:
    name: Build s2geometry library for CATCH testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout build script
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/scripts/build_s2.sh
          sparse-checkout-cone-mode: false
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Check for cached files
        uses: actions/cache/restore@v4
        id: cache
        with:
          path: |
            /usr/local/include/s2
            /usr/local/lib/libs2.so*
            ${{ env.Python_ROOT_DIR }}/lib/python${{ env.PYTHON_VERSION }}/site-packages/_pywraps2.so
            ${{ env.Python_ROOT_DIR }}/lib/python${{ env.PYTHON_VERSION }}/site-packages/pywraps2.py
          key: s2geometry-py${{ steps.setup-python.outputs.python-version }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install cmake libgflags-dev libgtest-dev libssl-dev
      - name: Build and install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -e

          mkdir build
          cd build

          wget https://github.com/abseil/abseil-cpp/archive/refs/tags/${{ env.ABSEIL_TAG}}.tar.gz
          tar xzf ${{ env.ABSEIL_TAG}}.tar.gz

          cd abseil-cpp-${{ env.ABSEIL_TAG}}
          mkdir -p build
          cd build
          cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_CXX_STANDARD=11 -DCMAKE_INSTALL_PREFIX=${{ env.S2PREFIX }} -DABSL_ENABLE_INSTALL=ON -DABSL_PROPAGATE_CXX_STD=ON ..
          make -j $(nproc)
          sudo make install
          cd ../..

          wget https://github.com/google/s2geometry/archive/refs/tags/${{ env.S2_TAG}}.tar.gz
          tar xzf ${{ env.S2_TAG}}.tar.gz

          export LDFLAGS="-L${{ env.S2PREFIX }}/lib -Wl,-rpath=${{ env.S2PREFIX }}/lib"
          export CXXFLAGS="-I${{ env.S2PREFIX }}/include"
          cd s2geometry-${S2_TAG:1}
          mkdir -p build
          cd build
          cmake -DWITH_PYTHON=ON -DCMAKE_PREFIX_PATH=${{ env.S2PREFIX }} -DCMAKE_CXX_STANDARD=11 -DCMAKE_INSTALL_PREFIX=${{ env.S2PREFIX }} -Wno-dev ..
          make -j $(nproc)
          sudo make install

      - name: Cache data
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: s2geometry-py${{ steps.setup-python.outputs.python-version }}
          path: |
            /usr/local/include/s2
            /usr/local/lib/libs2.so*
            ${{ env.Python_ROOT_DIR }}/lib/python${{ env.PYTHON_VERSION }}/site-packages/_pywraps2.so
            ${{ env.Python_ROOT_DIR }}/lib/python${{ env.PYTHON_VERSION }}/site-packages/pywraps2.py
