# GitHub Actions workflow for building the s2geometry library in a python
# virtual environment

on:
  workflow_call:

env:
  PYTHON_VERSION: "3.11"
  ABSEIL_TAG: "20220623.1"
  S2_TAG: "v0.10.0"

jobs:
  s2geometry:
    name: Build s2geometry library for CATCH testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout build script
        uses: actions/checkout@v4
        with:
          sparse-checkout: |
            .github/scripts/build_s2.sh
          sparse-checkout-cone-mode: false
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.PYTHON_VERSION }}"
      - name: Check for cached files
        uses: actions/cache/restore@v4
        id: cache
        with:
          key: s2geometry-py${{ steps.setup-python.outputs.python-version }}
          path: |
            ~/.venv
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          sudo apt update
          sudo apt install cmake libgflags-dev libgtest-dev libssl-dev
      - name: Build and install
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          set -e

          python3 -m venv ~/.venv
          source ~/.venv/bin/activate
          python3 -m pip install -U pip setuptools wheel

          mkdir build
          cd build

          wget https://github.com/abseil/abseil-cpp/archive/refs/tags/${{ env.ABSEIL_TAG}}.tar.gz
          tar xzf ${{ env.ABSEIL_TAG}}.tar.gz

          cd abseil-cpp-${{ env.ABSEIL_TAG}}
          mkdir -p build
          cd build
          cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_CXX_STANDARD=11 -DCMAKE_INSTALL_PREFIX=${VIRTUAL_ENV} -DABSL_ENABLE_INSTALL=ON -DABSL_PROPAGATE_CXX_STD=ON ..
          make -j $(nproc)
          make install
          cd ../..

          wget https://github.com/google/s2geometry/archive/refs/tags/${{ env.S2_TAG}}.tar.gz
          tar xzf ${{ env.S2_TAG}}.tar.gz
          export LDFLAGS="-L${VIRTUAL_ENV}/lib -Wl,-rpath=${VIRTUAL_ENV}/lib"
          export CXXFLAGS="-I${VIRTUAL_ENV}/include"

          cd s2geometry-${S2_TAG:1}
          mkdir -p build
          cd build
          cmake -DWITH_PYTHON=ON -DCMAKE_PREFIX_PATH=${VIRTUAL_ENV} -DCMAKE_CXX_STANDARD=11 -DCMAKE_INSTALL_PREFIX=${VIRTUAL_ENV} -Wno-dev ..
          make -j $(nproc)
          make install

          find ~/.venv/

      - name: Cache S2
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          key: s2geometry-py${{ steps.setup-python.outputs.python-version }}
          path: |
            ~/.venv
