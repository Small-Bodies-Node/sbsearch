# GitHub Actions workflow for testing and continuous integration.
#
# This file performs testing using tox and tox.ini to define and configure the test environments.

name: CI Tests

on:
  push:
    # branches:
    # - v2
  #  tags: # run CI if specific tags are pushed
  pull_request:
    # branches: # only build on PRs against 'main' if you need to further limit when CI is run.
    #     - v2

jobs:
  # Github Actions supports ubuntu, windows, and macos virtual environments:
  # https://help.github.com/en/actions/reference/virtual-environments-for-github-hosted-runners
  ci_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    # Uncomment for local testing with act
    # - name: Install cmake
    #   run: apt-get update && apt-get install cmake -y
    - name: Install libs2
      run: |
        S2HASH=a4dddf40647c68cd0104eafc31e9c8fb247a6308
        pushd .
        mkdir -p build
        cd build
        wget https://github.com/google/s2geometry/archive/${S2HASH}.tar.gz
        tar xzf ${S2HASH}.tar.gz
        # apply patch so we can build without google's testing library
        wget https://patch-diff.githubusercontent.com/raw/google/s2geometry/pull/78.patch
        if [[ "$(md5sum < 78.patch)" = "1b8868841bcc7cc35188bad3c228debe  -" ]]; then
          echo "Patch checksum verified"
        else
          echo "Patch checksum failure"
          exit 1
        fi
        cd s2geometry-${S2HASH}
        patch -i ../78.patch

        mkdir build
        cd build
        cmake -DCMAKE_INSTALL_PREFIX=/usr ..
        make
        sudo make install
    - name: Install base dependencies
      run: python -m pip install --upgrade pip tox
    - name: Test with tox
      run: tox -e py38-test -- --remote-data
    # This is an example of how to upload coverage to codecov
    # - name: Upload coverage to codecov
    #   if: "contains(matrix.toxenv, '-cov')"
    #   uses: codecov/codecov-action@v1
    #   with:
    #     file: ./coverage.xml
